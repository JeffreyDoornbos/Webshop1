/**
* DevExpress Dashboard (_custom-appearance-dialog.d.ts)
* Version:  22.2.4
* Build date: Jan 24, 2023
* Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import * as ko from 'knockout';
import { ICustomAppearance } from './_conditional-formatting-custom-color-storage';
export declare class CustomAppearanceDialog {
    private setAppearance;
    visible: ko.Observable<boolean>;
    appearance: ko.Observable<ICustomAppearance>;
    appearanceWrapper: {};
    items: ({
        label: {
            text: string;
        };
        dataField: string;
        editorType: string;
        editorOptions: {
            dataSource: string[];
        };
    } | {
        label: {
            text: string;
        };
        dataField: string;
        editorType: string;
        editorOptions: {
            dataSource?: undefined;
        };
    })[];
    constructor(setAppearance: (appearance: ICustomAppearance) => void);
    buttonItems: ko.ObservableArray<{
        toolbar: string;
        location: string;
        widget: string;
        options: {
            text: any;
            onClick: () => void;
        };
    }>;
    show(appearance: any): void;
    setValue(value: any): void;
}

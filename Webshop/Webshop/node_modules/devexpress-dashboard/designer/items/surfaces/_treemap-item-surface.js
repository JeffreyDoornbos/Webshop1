/**
* DevExpress Dashboard (_treemap-item-surface.js)
* Version:  22.2.4
* Build date: Jan 24, 2023
* Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TreemapItemSurface = void 0;
const ko = require("knockout");
const _treemap_item_properties_composer_1 = require("../properties-composers/_treemap-item-properties-composer");
const _data_item_collection_surface_1 = require("../sections/_data-item-collection-surface");
const _section_descriptors_1 = require("../_section-descriptors");
const _base_item_surface_1 = require("./_base-item-surface");
class TreemapItemSurface extends _base_item_surface_1.DataDashboardItemSurface {
    fillSections() {
        var addTileOptions = (tabs, dataItem) => {
            if (dataItem && dataItem.uniqueName()) {
                let argument = this.dashboardItem.arguments().filter(d => d.uniqueName() === dataItem.uniqueName())[0];
                if (this.dashboardItem.arguments().indexOf(argument) !== this.dashboardItem.arguments().length - 1) {
                    tabs.push(_treemap_item_properties_composer_1.TreemapItemPropertiesComposer.getTileOptionsTab(this.dashboardItem, dataItem));
                }
            }
        };
        this.dataSections.push(new _data_item_collection_surface_1.DataItemCollectionSurface(this, _section_descriptors_1.SectionDescriptors.Values, undefined, ko.computed(() => !this.dashboardItem.values().length && !!this.dashboardItem.arguments().length)));
        this.dataSections.push(new _data_item_collection_surface_1.DataItemCollectionSurface(this, _section_descriptors_1.SectionDescriptors.Arguments, addTileOptions));
    }
    constructor(dashboardItem, dashboardModel, dataSourceBrowser, notificationController) {
        super(dashboardItem, dashboardModel, dataSourceBrowser, notificationController);
    }
    getPropertiesComposer() {
        return new _treemap_item_properties_composer_1.TreemapItemPropertiesComposer(this._dashboardItemCustomization);
    }
}
exports.TreemapItemSurface = TreemapItemSurface;
_section_descriptors_1.surfaceItemsFactory.register('Treemap', TreemapItemSurface);
